<svg xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font: bold 24px monospace; fill: #4CAF50; text-anchor: middle; }
      .section-title { font: bold 18px monospace; fill: #e0e0e0; }
      .text { font: 12px monospace; fill: #e0e0e0; }
      .small-text { font: 10px monospace; fill: #888; }
      .code-text { font: 11px monospace; fill: #e0e0e0; }
      .name-cell { fill: #4CAF50; stroke: #333; stroke-width: 2; }
      .link-cell { fill: #2196F3; stroke: #333; stroke-width: 2; }
      .code-cell { fill: #FF9800; stroke: #333; stroke-width: 2; }
      .bg-dark { fill: #2d2d2d; stroke: #4CAF50; stroke-width: 2; }
      .bg-black { fill: #1a1a1a; stroke: #555; stroke-width: 1; }
      .arrow { stroke: #4CAF50; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .link-arrow { stroke: #FF5722; stroke-width: 2; fill: none; marker-end: url(#arrowhead2); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4CAF50" />
    </marker>
    <marker id="arrowhead2" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#FF5722" />
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="1600" fill="#1a1a1a"/>
  
  <!-- Title -->
  <text x="600" y="40" class="title">Fram.py - Forth RAM Dictionary Structure</text>
  
  <!-- RAM Array Section -->
  <rect x="50" y="80" width="1100" height="300" class="bg-dark" rx="8"/>
  <text x="70" y="110" class="section-title">RAM Array Structure (After loading basic words)</text>
  
  <!-- Legend -->
  <rect x="70" y="125" width="20" height="15" class="name-cell"/>
  <text x="100" y="137" class="text">Word Name</text>
  <rect x="200" y="125" width="20" height="15" class="link-cell"/>
  <text x="230" y="137" class="text">Link Pointer</text>
  <rect x="330" y="125" width="20" height="15" class="code-cell"/>
  <text x="360" y="137" class="text">Code Pointer</text>
  
  <!-- RAM Array Cells -->
  <!-- Index 0-2: "bye" -->
  <rect x="70" y="160" width="60" height="40" class="name-cell"/>
  <text x="100" y="175" class="small-text">0</text>
  <text x="100" y="185" class="text" text-anchor="middle">"bye"</text>
  
  <rect x="140" y="160" width="60" height="40" class="link-cell"/>
  <text x="170" y="175" class="small-text">1</text>
  <text x="170" y="185" class="text" text-anchor="middle">-1</text>
  
  <rect x="210" y="160" width="60" height="40" class="code-cell"/>
  <text x="240" y="175" class="small-text">2</text>
  <text x="240" y="185" class="text" text-anchor="middle">xbye</text>
  
  <!-- Index 3-5: "'" -->
  <rect x="280" y="160" width="60" height="40" class="name-cell"/>
  <text x="310" y="175" class="small-text">3</text>
  <text x="310" y="185" class="text" text-anchor="middle">"'"</text>
  
  <rect x="350" y="160" width="60" height="40" class="link-cell"/>
  <text x="380" y="175" class="small-text">4</text>
  <text x="380" y="185" class="text" text-anchor="middle">0</text>
  
  <rect x="420" y="160" width="60" height="40" class="code-cell"/>
  <text x="450" y="175" class="small-text">5</text>
  <text x="450" y="185" class="text" text-anchor="middle">xtick</text>
  
  <!-- Index 6-8: "words" -->
  <rect x="70" y="210" width="60" height="40" class="name-cell"/>
  <text x="100" y="225" class="small-text">6</text>
  <text x="100" y="235" class="text" text-anchor="middle">"words"</text>
  
  <rect x="140" y="210" width="60" height="40" class="link-cell"/>
  <text x="170" y="225" class="small-text">7</text>
  <text x="170" y="235" class="text" text-anchor="middle">3</text>
  
  <rect x="210" y="210" width="60" height="40" class="code-cell"/>
  <text x="240" y="225" class="small-text">8</text>
  <text x="240" y="235" class="text" text-anchor="middle">xwords</text>
  
  <!-- Index 9-11: "+" -->
  <rect x="280" y="210" width="60" height="40" class="name-cell"/>
  <text x="310" y="225" class="small-text">9</text>
  <text x="310" y="235" class="text" text-anchor="middle">"+"</text>
  
  <rect x="350" y="210" width="60" height="40" class="link-cell"/>
  <text x="380" y="225" class="small-text">10</text>
  <text x="380" y="235" class="text" text-anchor="middle">6</text>
  
  <rect x="420" y="210" width="60" height="40" class="code-cell"/>
  <text x="450" y="225" class="small-text">11</text>
  <text x="450" y="235" class="text" text-anchor="middle">λ:add</text>
  
  <!-- Link arrows -->
  <path class="link-arrow" d="M 380 210 Q 380 195 170 195 Q 170 210 170 210"/>
  <path class="link-arrow" d="M 170 210 Q 170 195 310 195 Q 310 160 310 160"/>
  <path class="link-arrow" d="M 380 160 Q 380 145 100 145 Q 100 160 100 160"/>
  
  <!-- RAM_NEXT pointer -->
  <text x="70" y="280" class="text">RAM_NEXT = 9 (points to most recent word "+")</text>
  <path class="arrow" d="M 200 270 L 310 250"/>
  
  <!-- Dictionary Search Process -->
  <rect x="50" y="320" width="1100" height="200" class="bg-dark" rx="8"/>
  <text x="70" y="350" class="section-title">Dictionary Search Process</text>
  
  <!-- Flow boxes -->
  <rect x="70" y="370" width="120" height="60" class="bg-black" rx="4"/>
  <text x="130" y="390" class="text" text-anchor="middle">Start Search</text>
  <text x="130" y="405" class="text" text-anchor="middle">x = RAM_NEXT (9)</text>
  
  <rect x="220" y="370" width="120" height="60" class="bg-black" rx="4"/>
  <text x="280" y="390" class="text" text-anchor="middle">Check Name</text>
  <text x="280" y="405" class="text" text-anchor="middle">RAM[x] == target?</text>
  
  <rect x="370" y="370" width="120" height="60" class="bg-black" rx="4"/>
  <text x="430" y="385" class="text" text-anchor="middle">If Match</text>
  <text x="430" y="400" class="text" text-anchor="middle">Return x + 2</text>
  <text x="430" y="415" class="text" text-anchor="middle">(execution token)</text>
  
  <!-- Flow arrows -->
  <path class="arrow" d="M 190 400 L 220 400"/>
  <path class="arrow" d="M 340 400 L 370 400"/>
  
  <!-- No match flow -->
  <rect x="70" y="450" width="120" height="60" class="bg-black" rx="4"/>
  <text x="130" y="470" class="text" text-anchor="middle">Follow Link</text>
  <text x="130" y="485" class="text" text-anchor="middle">x = RAM[x + 1]</text>
  
  <rect x="220" y="450" width="120" height="60" class="bg-black" rx="4"/>
  <text x="280" y="470" class="text" text-anchor="middle">Continue</text>
  <text x="280" y="485" class="text" text-anchor="middle">Until x == -1</text>
  <text x="280" y="500" class="text" text-anchor="middle">(end of chain)</text>
  
  <path class="arrow" d="M 190 480 L 220 480"/>
  <text x="280" y="445" class="text" text-anchor="middle">↓ (if no match)</text>
  <path class="arrow" d="M 280 430 L 280 450"/>
  
  <!-- Example Section -->
  <rect x="50" y="540" width="550" height="120" class="bg-dark" rx="8"/>
  <text x="70" y="570" class="section-title">Example: Looking up "+"</text>
  <rect x="70" y="580" width="510" height="70" class="bg-black" rx="4"/>
  <text x="80" y="600" class="code-text">Search path:</text>
  <text x="80" y="615" class="code-text">1. Start at RAM_NEXT (9) → Check RAM[9] = "+" → MATCH!</text>
  <text x="80" y="630" class="code-text">2. Return execution token: 9 + 2 = 11</text>
  <text x="80" y="645" class="code-text">3. Execute: RAM[11]() calls the lambda function</text>
  
  <!-- Stack Operations -->
  <rect x="620" y="540" width="530" height="180" class="bg-dark" rx="8"/>
  <text x="640" y="570" class="section-title">Stack Operations</text>
  
  <!-- Data Stack -->
  <rect x="650" y="590" width="100" height="100" class="bg-black" rx="4"/>
  <text x="700" y="610" class="text" text-anchor="middle">Data Stack (S)</text>
  <rect x="660" y="620" width="80" height="20" fill="#4CAF50"/>
  <text x="700" y="633" class="text" text-anchor="middle" fill="black">Top</text>
  <rect x="660" y="645" width="80" height="20" fill="#4CAF50"/>
  <text x="700" y="658" class="text" text-anchor="middle" fill="black">...</text>
  <rect x="660" y="670" width="80" height="20" fill="#4CAF50"/>
  <text x="700" y="683" class="text" text-anchor="middle" fill="black">Bottom</text>
  
  <!-- Return Stack -->
  <rect x="780" y="590" width="100" height="100" class="bg-black" rx="4"/>
  <text x="830" y="610" class="text" text-anchor="middle">Return Stack (R)</text>
  <text x="830" y="630" class="small-text" text-anchor="middle">Defined but</text>
  <text x="830" y="645" class="small-text" text-anchor="middle">not used in</text>
  <text x="830" y="660" class="small-text" text-anchor="middle">this version</text>
  
  <!-- Key Functions -->
  <rect x="50" y="740" width="1100" height="160" class="bg-dark" rx="8"/>
  <text x="70" y="770" class="section-title">Key Functions</text>
  <rect x="70" y="780" width="1060" height="110" class="bg-black" rx="4"/>
  <text x="80" y="800" class="code-text">code(name, func) - Adds word to dictionary</text>
  <text x="80" y="815" class="code-text">' (tick) - Finds word, returns execution token</text>
  <text x="80" y="830" class="code-text">execute - Calls function at given execution token</text>
  <text x="80" y="845" class="code-text">words - Lists all defined words by walking links</text>
  <text x="80" y="860" class="code-text">interpret - Main dispatcher: lookup → execute or parse number</text>
  
  <!-- Linked List Traversal -->
  <rect x="50" y="920" width="1100" height="140" class="bg-dark" rx="8"/>
  <text x="70" y="950" class="section-title">Linked List Traversal</text>
  <text x="70" y="970" class="text">Words are stored in reverse order of definition. Search starts from newest word (RAM_NEXT) and follows links backward:</text>
  
  <!-- Traversal visualization -->
  <rect x="200" y="990" width="60" height="30" fill="#4CAF50" rx="4"/>
  <text x="230" y="1010" class="text" text-anchor="middle" fill="black">"+" (9)</text>
  
  <rect x="300" y="990" width="80" height="30" fill="#2196F3" rx="4"/>
  <text x="340" y="1010" class="text" text-anchor="middle">"words" (6)</text>
  
  <rect x="420" y="990" width="60" height="30" fill="#FF9800" rx="4"/>
  <text x="450" y="1010" class="text" text-anchor="middle">"'" (3)</text>
  
  <rect x="520" y="990" width="70" height="30" fill="#9C27B0" rx="4"/>
  <text x="555" y="1010" class="text" text-anchor="middle">"bye" (0)</text>
  
  <rect x="630" y="990" width="60" height="30" fill="#F44336" rx="4"/>
  <text x="660" y="1010" class="text" text-anchor="middle">-1 (end)</text>
  
  <!-- Traversal arrows -->
  <path class="arrow" d="M 260 1005 L 300 1005"/>
  <path class="arrow" d="M 380 1005 L 420 1005"/>
  <path class="arrow" d="M 480 1005 L 520 1005"/>
  <path class="arrow" d="M 590 1005 L 630 1005"/>
  
  <!-- Architecture Summary -->
  <rect x="50" y="1080" width="1100" height="200" class="bg-dark" rx="8"/>
  <text x="70" y="1110" class="section-title">Architecture Summary</text>
  <text x="70" y="1140" class="text">• RAM Dictionary: Linear memory storing linked list of word definitions</text>
  <text x="70" y="1160" class="text">• Each word: 3 cells (name, link, code) forming backward-pointing chain</text>
  <text x="70" y="1180" class="text">• Search: Start at RAM_NEXT, follow links until match or end (-1)</text>
  <text x="70" y="1200" class="text">• Execution: Indirect call via execution token (word address + 2)</text>
  <text x="70" y="1220" class="text">• Benefits: Runtime extensibility, word redefinition, introspection, meta-programming</text>
  <text x="70" y="1240" class="text">• Classic Forth design: Simple but powerful dictionary-based language system</text>
</svg>